
FUNC VOID B_SETSKILLVALUESBASEDONATTRIBUTE(VAR C_NPC SLF,VAR INT ATR)
{
	VAR INT TYP_ATR;
	IF(ATR==ATR_STRENGTH){	TYP_ATR=SLF.ATTRIBUTE[ATR_STRENGTH];	}
	ELSE IF(ATR==ATR_DEXTERITY){	TYP_ATR=SLF.ATTRIBUTE[ATR_DEXTERITY];	}
	ELSE IF(ATR==ATR_MANA_MAX){	TYP_ATR=SLF.ATTRIBUTE[ATR_MANA_MAX];	};
	IF(ATR==ATR_STRENGTH)
	{
		IF(NPC_GETTALENTSKILL(SLF,NPC_TALENT_REGEN_HP)==1)
		{
			NPC_SETTALENTVALUE(SLF,NPC_TALENT_REGEN_HP,MATH_ROUND(TYP_ATR/50));//50str per 1hp/s
		}
		ELSE IF(NPC_GETTALENTSKILL(SLF,NPC_TALENT_REGEN_HP)==2)
		{
			NPC_SETTALENTVALUE(SLF,NPC_TALENT_REGEN_HP,MATH_ROUND(TYP_ATR/25));//25str per 1hp/s
		};
	}
	ELSE IF(ATR==ATR_MANA_MAX)
	{
		IF(NPC_GETTALENTSKILL(SLF,NPC_TALENT_REGEN_MP)==1)
		{
			NPC_SETTALENTVALUE(SLF,NPC_TALENT_REGEN_MP,MATH_ROUND(TYP_ATR/60));//60str per 1mp/s
		}
		ELSE IF(NPC_GETTALENTSKILL(SLF,NPC_TALENT_REGEN_MP)==2)
		{
			NPC_SETTALENTVALUE(SLF,NPC_TALENT_REGEN_MP,MATH_ROUND(TYP_ATR/30));//30str per 1mp/s
		};
	}
	ELSE IF(ATR==ATR_DEXTERITY)
	{
		IF(HERO_EVASION_LEVEL==1)
		{
			NPC_SETTALENTVALUE(SLF,NPC_TALENT_EVASION,MATH_ROUND(TYP_ATR/13));//13dex per 1%
		}
		ELSE IF(HERO_EVASION_LEVEL==2)
		{
			NPC_SETTALENTVALUE(SLF,NPC_TALENT_EVASION,MATH_ROUND(TYP_ATR/6));//6dex per 1%
		};

		IF(NPC_GETTALENTSKILL(SLF,NPC_TALENT_PICKPOCKET)==1)
		{
			NPC_SETTALENTVALUE(SLF,NPC_TALENT_PICKPOCKET,100-MATH_ROUND(TYP_ATR/5));//5dex per 1%
		}
		ELSE IF(NPC_GETTALENTSKILL(SLF,NPC_TALENT_PICKPOCKET)==2)
		{
			NPC_SETTALENTVALUE(SLF,NPC_TALENT_PICKPOCKET,100-MATH_ROUND(TYP_ATR/2));//2dex per 1%
		};
		IF(NPC_GETTALENTSKILL(SLF,NPC_TALENT_PICKLOCK)==1)
		{
			NPC_SETTALENTVALUE(SLF,NPC_TALENT_PICKLOCK,100-MATH_ROUND(TYP_ATR/5));//5dex per 1%
		}
		ELSE IF(NPC_GETTALENTSKILL(SLF,NPC_TALENT_PICKLOCK)==2)
		{
			NPC_SETTALENTVALUE(SLF,NPC_TALENT_PICKLOCK,100-MATH_ROUND(TYP_ATR/2));//2dex per 1%
		};
	};

};
FUNC VOID B_ChangeAttribute(VAR C_NPC SLF,VAR INT ATR,VAR INT NUM)
{
	if(ATR!=ATR_HITPOINTS)&&(ATR!=ATR_MANA)&&(Npc_IsPlayer(slf))
	{
		B_SETSKILLVALUESBASEDONATTRIBUTE(SLF,ATR);
	};
	NPC_CHANGEATTRIBUTE(SLF,ATR,NUM);
	IF(ATR==ATR_HITPOINTS)
	{
		Npc_SetAivar(SLF,AIV_LASTHP,SLF.ATTRIBUTE[ATR_HITPOINTS]+(NUM));
	};

};

FUNC VOID B_HACK_CHANGEATTRIBUTE(VAR C_NPC SLF,VAR INT ATR,VAR INT NUM)//Used only by rings & amulets !!TempPot SEPARATED!!
{

	IF(ATR==ATR_STRENGTH)
	{
		STR_BONUS+=NUM;
	}
	ELSE IF(ATR==ATR_DEXTERITY)
	{
		DEX_BONUS+=NUM;
	}
	ELSE IF(ATR==ATR_MANA_MAX)
	{
		MP_BONUS+=NUM;
	};
	B_CHANGEATTRIBUTE(SLF,ATR,NUM);
};
